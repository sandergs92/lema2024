<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>ROS 2 Interface</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>ROS2 Interface</h1>

<p>The ROS 2 Interface is part of the <a href="apisOverview.htm">CoppeliaSim API framework</a>. It duplicates the C++ ROS 2 API with a good fidelity. This makes it the ideal choice for very flexible communication via ROS2. You can recognize ROS2 Interface API functions from the <em>simROS2</em>- prefix.</p>

<p>ROS2 is a distributed pseudo operating system allowing for easy management and communication between multiple computers connected in a network. Please refer to the <a href="https://index.ros.org/doc/ros2/">official ROS2 documentation</a> for details about ROS2.</p>

<p>CoppeliaSim can act as a ROS2 node that other nodes can communicate with via services, topics and actions.</p>

<p>The ROS2 Interface functionality in CoppeliaSim is enabled via a plugin: <em><a href="https://github.com/CoppeliaRobotics/simROS" target="_blank">libsimROS2</a>.*</em>. The plugin can easily be adapted to your own needs. The plugin is loaded with:</p>

<div class="multi-language-switcher">

<code class="hljs language-python coppelia-coppeliasim-script">#python

simROS2 = require('simROS2')</code>
<code class="hljs language-lua coppelia-coppeliasim-script">--lua

simROS2 = require('simROS2')</code>
</div>

<p>Make sure to inspect CoppeliaSim's console window or terminal for details on plugin load operations.</p>
<p>Have a look at following simulation scenes/models for a quick start with the ROS Interface:</p>
<li><em>scenes/messaging/ros2InterfaceTopicPublisherAndSubscriber.ttt</em></li>
<li><em>scenes/messaging/controlTypeExamples/controlledViaRos2.ttt</em></li>
<li><em>models/tools/ros2Interface helper tool.ttm</em> (model allowing to operate CoppeliaSim in <a href="simulation.htm#stepped">stepping mode</a>, e.g. in order to manually step the simulation)</li>


<p>Also have a look at the <a href="ros2Tutorial.htm">ROS2 tutorial</a> and the <a href="externalControllerTutorial.htm">external controller tutorial</a>.</p>

<br>
<br>
 </tr>
 <tr>
   <td > 
 </tr>
</table> 
</div>  
  
  
<link rel="stylesheet" href="../js/hljs/11.8.0/styles/default.min.css" />
<script src="../js/hljs/11.8.0/highlight.min.js"></script>
<script src="../js/hljs/11.8.0/languages/cmake.min.js"></script>
<script src="../js/hljs/11.8.0/languages/cpp.min.js"></script>
<script src="../js/hljs/11.8.0/languages/java.min.js"></script>
<script src="../js/hljs/11.8.0/languages/javascript.min.js"></script>
<script src="../js/hljs/11.8.0/languages/lua.min.js"></script>
<script src="../js/hljs/11.8.0/languages/matlab.min.js"></script>
<script src="../js/hljs/11.8.0/languages/python.min.js"></script>
<script src="../js/hljs/11.8.0/languages/rust.min.js"></script>
<script src="../js/hljs/11.8.0/languages/xml.min.js"></script>
<script src="../js/multi-language-switcher.js"></script>
<script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>

</html>
